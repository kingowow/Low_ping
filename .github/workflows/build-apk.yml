name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Cordova
      run: npm install -g cordova

    - name: Initialize Cordova project
      run: |
        cordova create temp com.example.wireguard "WireGuard Generator"
        cd temp
        cordova platform add android
        rm -rf www
        cp -r ../www .

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'

    - name: Install Android SDK
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-30" "build-tools;30.0.3"

    - name: Build APK
      run: |
        cd temp
        cordova build android --debug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: wireguard-app-debug.apk
        path: temp/platforms/android/app/build/outputs/apk/debug/app-debug.apk
